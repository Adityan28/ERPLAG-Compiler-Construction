<range> = {NUM}
<iterativeStmt> = {FOR,WHILE}
<default> = {DEFAULT} U {e}
<value> = {NUM} U {TRUE} U {FALSE}
<caseStmt> = {CASE}
<conditionalStmt> = {SWITCH}
<declare> = {DECLARE}
<relationalOP> = {LT} U {LE} U {GT} U {GE} U {EQ} U {NE}
<logicalOp> = {AND,OR}
<addOp>  = {PLUS,MINUS}
<mulOp> = {MUL,DIV}
<factor> = {BO}U{ID,NUM,RNUM}
<var>  = {ID,NUM,RNUM}
<R> = {MUL,DIV} U {e}
<term> = {BO,ID,NUM,RNUM}
<K> = {ADD,MINUS} U {e}
<arithmeticExpr> = {BO,ID,NUM,RNUM}
<expression>  = {BO,ID,NUM,RNUM}
<arithBoolExpr> = {BO,ID,NUM,RNUM}
<N> ={AND,OR} U {e}
<select> = {BO,ID,NUM,RNUM}
<N1> = {LT,LE,GT,GE,EQ,NE} U {e}
<idList> = {ID}
<L> = {COMMA} U {e}
<optional> = {SQBO} U {e}
<moduleReuseStmt>  = {SQBO,USE}
<index> = {NUM} U {ID}
<lvalueARRStmt> = {SQBO}
<lvalueIDStmt> = {ASSIGNOP}
<whichStmt>  = {SQBO} U {ASSIGNOP}
<assignmentStmt> = {ID}
<simpleStmt> = {ID} U {SQBO,USE}
<whichId> = {SQBO} U {e}
<ioStmt> = {GET_VALUE} U {PRINT}
<statement>  = {GET_VALUE,PRINT} U {ID,SQBO,USE} U {DECLARE} U  {SWITCH} U {FOR,WHILE}
<statements> = {GET_VALUE,PRINT,ID,SQBO,USE} U {e}
<moduleDef>  = {START}
<type> = {INTEGER} U {REAL} U {BOOLEAN}
<dataType> = {INTEGER} U {REAL} U {BOOLEAN} U {ARRAY}
<inputPlist> = {ID}
<M> = {COMMA} U {e}
<outputPlist> = {ID}
<M1> = {COMMA} U {e}
<ret>  = {RETURNS} U {e}
<module>  = {DEF}
<driverModule = {DEF}  ==  {DEF}U{$}
<otherModules>  = {DEF} U {e}
<moduleDeclaration>  = {DECLARE} == {DECLARE}
<moduleDeclarations>  = {DECLARE} U {e}  ==  
<program>  = {DECLARE,DEF,e}  == {$}
